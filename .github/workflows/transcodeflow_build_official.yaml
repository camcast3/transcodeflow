name: transcodeflow_build_official
on:
  push:
    branches:
      -  main

jobs:
  build-binary:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    outputs:
      new_version: ${{ steps.bump-version.outputs.new_version }}    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important to fetch all tags

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.6'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('./go.sum') }}

      - name: Build the binary
        run: |
          go mod download
          go build -o transcodeflow cmd/transcodeflow/main.go

      - name: Determine version bump
        id: bump-type
        run: |
          # Get the commit message
          COMMIT_MSG=$(git log -1 --pretty=%B)
          if [[ $COMMIT_MSG == "BREAKING CHANGE:"* ]] || [[ $COMMIT_MSG == "major:"* ]]; then
            echo "level=major" >> $GITHUB_OUTPUT
          elif [[ $COMMIT_MSG == "feat:"* ]] || [[ $COMMIT_MSG == "minor:"* ]]; then
            echo "level=minor" >> $GITHUB_OUTPUT
          else
            echo "level=patch" >> $GITHUB_OUTPUT
          fi

      - name: Get latest tag
        id: get-latest-tag-binary
        uses: actions-ecosystem/action-get-latest-tag@v1
        with:
          semver_only: true

      - name: Bump version
        id: bump-version
        uses: actions-ecosystem/action-bump-semver@v1
        with:
          current_version: ${{ steps.get-latest-tag-binary.outputs.tag }}
          level: ${{ steps.bump-type.outputs.level }}

      # Only create a new tag on pushes to main branch (not PRs)
      - name: Create Tag
        if: github.ref == 'refs/heads/main'
        uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{ steps.bump-version.outputs.new_version }}
          message: |
            Release ${{ steps.bump-version.outputs.new_version }}
            
            Type: ${{ steps.bump-type.outputs.level }}
            Changes: ${{ github.event.head_commit.message }}
        
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: transcodeflow-binary
          path: transcodeflow

  build-docker-server:
    needs: build-binary
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    env:
      HAS_DOCKER_SECRETS: ${{ secrets.D_USER != '' && secrets.D_PAT != '' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download binary artifact
        uses: actions/download-artifact@v4
        with:
          name: transcodeflow-binary
          path: .

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.9.0

      - name: Login to DockerHub
        uses: docker/login-action@v3.3.0
        if: env.HAS_DOCKER_SECRETS
        with:
          username: ${{ secrets.D_USER }}
          password: ${{ secrets.D_PAT }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: |
            ${{ github.repository_owner }}/transcodeflow-server
            ghcr.io/${{ github.repository_owner }}/transcodeflow-server
          flavor: |
            latest=true
          labels: |
            org.opencontainers.image.authors=Cameron Carlton
            org.opencontainers.image.source="https://github.com/camcast3/transcodeflow"
            org.opencontainers.image.description="A web server for queuing video transcoding jobs"
            org.opencontainers.image.licenses="MIT"
            org.opencontainers.image.version=${{ needs.build-binary.outputs.new_version }}

      - name: Build and push
        uses: docker/build-push-action@v6.13.0
        if: github.actor == github.repository_owner && github.ref == 'refs/heads/main'
        with:
          context: .
          file: docker/Dockerfile.server          
          push: true
          pull: true
          tags: |
            ${{ github.repository_owner }}/transcodeflow-server:${{ needs.build-binary.outputs.new_version }}
            ${{ github.repository_owner }}/transcodeflow-server:latest
            ghcr.io/${{ github.repository_owner }}/transcodeflow-server:${{ needs.build-binary.outputs.new_version }}
            ghcr.io/${{ github.repository_owner }}/transcodeflow-server:latest
          labels: ${{ steps.meta.outputs.labels }}
